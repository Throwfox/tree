Vagrant.configure(2) do |config|
  config.vm.box = "quickstart/cdh"  
  config.vm.box_version = "5.4.2"

  config.vm.synced_folder "./", "/home/cloudera/tree", create: true, group: "cloudera", owner: "cloudera"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.gui = false
    vb.cpus = "2"
    vb.memory = "8192"
  end
 
  config.vm.provision "shell", run: "always", inline: <<-SHELL
    sudo service cloudera-scm-agent start
    echo 'Initializing CDH Components...'
    /home/cloudera/tree/init/cm_service.py hdfs start
    /home/cloudera/tree/init/cm_service.py yarn start
    /home/cloudera/tree/init/cm_service.py zookeeper start
    /home/cloudera/tree/init/cm_service.py spark_on_yarn start
    /home/cloudera/tree/init/cm_service.py hive start
    /home/cloudera/tree/init/cm_service.py impala start
    /home/cloudera/tree/init/cm_service.py hue start

    # Preping data specific to tree analysis, done as cloudera
    su cloudera
    if hadoop fs -test -d /user/cloudera/german ; then
       echo "Data already loaded, moving on."
    else
       # Load file into hdfs
       HADOOP_USER_NAME=cloudera hdfs dfs -mkdir /user/cloudera/german
       HADOOP_USER_NAME=cloudera hdfs dfs -put /home/cloudera/tree/data/german_credit.csv /user/cloudera/german/
       # Run hive script to create table on text file and a copy in parquet
       HADOOP_USER_NAME=cloudera hive -f /home/cloudera/tree/init/create_tables.hql
       # ensure that table is accessible in impala
       HADOOP_USER_NAME=cloudera impala-shell -q 'invalidate metadata default.german'
       HADOOP_USER_NAME=cloudera impala-shell -q 'invalidate metadata default.german_parquet'
    fi

    # add link to allow sqlCtx
    ln -s /etc/hive/conf.cloudera.hive/hive-site.xml /etc/spark/conf.cloudera.spark_on_yarn

    # Starting ipython notebook
    sed -i '/.*c\.NotebookApp\.notebook_dir.*/c c\.NotebookApp\.notebook_dir = u\"\/home\/cloudera\/tree\/nb\"' /home/cloudera/.ipython/profile_pyspark/ipython_notebook_config.py
    runuser -l cloudera -c 'nohup /opt/anaconda/bin/ipython notebook --profile=pyspark &> /dev/null &'
    echo 'Provision Complete! Navigate to localhost:8890 to run analysis.'

  SHELL

end
